/*

 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufrgs.inf.view;

import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

public class Text2Music extends javax.swing.JFrame {

    public Text2Music() {
        initComponents();
        restricSpinnerBPM();
        restricSpinnerRhythm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinnerBPM = new javax.swing.JSpinner();
        jSpinnerRhythm = new javax.swing.JSpinner();
        jSliderVolume = new javax.swing.JSlider();
        jComboBoxTimbre = new javax.swing.JComboBox<String>();
        jLabelBPM = new javax.swing.JLabel();
        jLabelRhythm = new javax.swing.JLabel();
        jLabelTimbre = new javax.swing.JLabel();
        jScrollPaneTextArea = new javax.swing.JScrollPane();
        jTextAreaMusicContent = new javax.swing.JTextArea();
        jButtonConvertPlayStop = new javax.swing.JButton();
        jLabelMusic = new javax.swing.JLabel();
        jLabelVolume = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        jLabelStatus = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Text2Music");

        jSpinnerBPM.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jSpinnerBPM.setToolTipText("");
        jSpinnerBPM.setName(""); // NOI18N
        jSpinnerBPM.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerBPMStateChanged(evt);
            }
        });
        jSpinnerBPM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSpinnerBPMKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jSpinnerBPMKeyTyped(evt);
            }
        });

        jSpinnerRhythm.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N

        jComboBoxTimbre.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jComboBoxTimbre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTimbre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTimbreActionPerformed(evt);
            }
        });

        jLabelBPM.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabelBPM.setText("BPM:");

        jLabelRhythm.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabelRhythm.setText("Ritmo:");

        jLabelTimbre.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabelTimbre.setText("Timbre:");

        jScrollPaneTextArea.setHorizontalScrollBar(null);

        jTextAreaMusicContent.setColumns(20);
        jTextAreaMusicContent.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextAreaMusicContent.setLineWrap(true);
        jTextAreaMusicContent.setRows(5);
        jScrollPaneTextArea.setViewportView(jTextAreaMusicContent);

        jButtonConvertPlayStop.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jButtonConvertPlayStop.setText("Convert");

        jLabelMusic.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabelMusic.setText("Music:");

        jLabelVolume.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelVolume.setText("Volume:");

        jLabelStatus.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelStatus.setText("Status: ");

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Open File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenu3.setText("Export");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Export File");
        jMenu3.add(jMenuItem2);

        jMenuItem4.setText("Export MIDI");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem3.setText("Export MP3");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenu1.add(jMenu3);

        jMenuBar.add(jMenu1);

        jMenu2.setText("?");
        jMenuBar.add(jMenu2);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator)
                    .addComponent(jScrollPaneTextArea, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRhythm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelBPM, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelTimbre, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerBPM)
                            .addComponent(jSpinnerRhythm)
                            .addComponent(jComboBoxTimbre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButtonConvertPlayStop, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelVolume)
                                    .addComponent(jSliderVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabelMusic, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelStatus, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerBPM, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBPM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerRhythm, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRhythm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTimbre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTimbre))
                .addGap(19, 19, 19)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabelMusic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonConvertPlayStop, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelVolume)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSliderVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelStatus)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jComboBoxTimbreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTimbreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTimbreActionPerformed

    private void jSpinnerBPMStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerBPMStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jSpinnerBPMStateChanged

    private void jSpinnerBPMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerBPMKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerBPMKeyPressed

    private void jSpinnerBPMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinnerBPMKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerBPMKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Text2Music().setVisible(true);
            }
        });
    }
    
    private void restricSpinnerBPM(){
        
        SpinnerNumberModel spinnerNumberModelBPM = new SpinnerNumberModel();
        
        spinnerNumberModelBPM.setMaximum(MAXIMUM_J_SPINNER_BPM);
        spinnerNumberModelBPM.setMinimum(0);
        
        this.jSpinnerBPM.setModel(spinnerNumberModelBPM);
    }
    private void restricSpinnerRhythm(){
        
        SpinnerNumberModel spinnerNumberModelRhythm;
        spinnerNumberModelRhythm = new SpinnerNumberModel();
        
        spinnerNumberModelRhythm.setMaximum(MAXIMUM_J_SPINNER_RHYTHM);
        spinnerNumberModelRhythm.setMinimum(0);
        
        this.jSpinnerRhythm.setModel(spinnerNumberModelRhythm);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConvertPlayStop;
    private javax.swing.JComboBox<String> jComboBoxTimbre;
    private javax.swing.JLabel jLabelBPM;
    private javax.swing.JLabel jLabelMusic;
    private javax.swing.JLabel jLabelRhythm;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelTimbre;
    private javax.swing.JLabel jLabelVolume;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPaneTextArea;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JSlider jSliderVolume;
    private javax.swing.JSpinner jSpinnerBPM;
    private javax.swing.JSpinner jSpinnerRhythm;
    private javax.swing.JTextArea jTextAreaMusicContent;
    // End of variables declaration//GEN-END:variables

    private final int MAXIMUM_J_SPINNER_BPM = 200;
    private final int MAXIMUM_J_SPINNER_RHYTHM = 200;
}
